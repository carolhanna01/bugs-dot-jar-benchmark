#!/bin/bash
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
benchmark_name=$(echo $script_dir | rev | cut -d "/" -f 3 | rev)
project_name=$(echo $script_dir | rev | cut -d "/" -f 2 | rev)
bug_id=$(echo $script_dir | rev | cut -d "/" -f 1 | rev)
dir_name=/experiment/$benchmark_name/$project_name/$bug_id
cd $dir_name/src/src

SUB_PROJECT="flink-java"

# ADD DEBUG OUTPUT:
echo "=== BUILD SCRIPT DEBUG INFO ==="
echo "Script directory: $script_dir"
echo "Target directory: $dir_name"
echo "Current working directory: $(pwd)"
echo "Sub-project: $SUB_PROJECT"
echo "About to cd to: $SUB_PROJECT"

# FIX: Actually cd into the sub-project
cd $SUB_PROJECT

echo "Current working directory after cd to subproject: $(pwd)"
echo "Contents of current directory:"
ls -la
echo "Checking for pom.xml:"
ls -la pom.xml 2>/dev/null || echo "pom.xml not found!"
echo "==============================="

mvn install -DskipTests -DskipUTs=true -DskipITs=true \
  -V -B -U -Dhttps.protocols=TLSv1.2 \
  -Denforcer.skip=true \
  -Dcheckstyle.skip=true \
  -Dcobertura.skip=true \
  -Djacoco.skip=true \
  -Drat.skip=true \
  -Drat.ignoreErrors=true \
  -Drat.numUnapprovedLicenses=1000000 \
  -Dlicense.skip=true \
  -Dfindbugs.skip=true \
  -Dgpg.skip=true \
  -Dskip.npm=true \
  -Dskip.gulp=true \
  -Dskip.bower=true \
  -Dbaseline.skip=true \
  -Dmaven.javadoc.skip=true

# ADD DEPENDENCY COPY:
echo "Copying dependencies..."
mvn dependency:copy-dependencies

echo "Build completed. Final directory contents:"
ls -la target/ 2>/dev/null || echo "target/ directory not found"
ls -la target/dependency/ 2>/dev/null || echo "target/dependency/ directory not found"