#!/bin/bash
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
benchmark_name=$(echo $script_dir | rev | cut -d "/" -f 3 | rev)
project_name=$(echo $script_dir | rev | cut -d "/" -f 2 | rev)
bug_id=$(echo $script_dir | rev | cut -d "/" -f 1 | rev)
dir_name=/experiment/$benchmark_name/$project_name/$bug_id

SUB_PROJECT="flink-java"

# FIX: Update paths to include sub-project
TARGET_PATH=$dir_name/src/src/$SUB_PROJECT
DEPENDENCY_PATH=$TARGET_PATH/target/dependency
EXTRACTED_DEPENDENCIES_PATH=$TARGET_PATH/extracted_dependencies

# ADD DEBUG OUTPUT:
echo "=== COMPRESS DEPS DEBUG INFO ==="
echo "Script directory: $script_dir"
echo "Target path: $TARGET_PATH"
echo "Dependency path: $DEPENDENCY_PATH"
echo "Sub-project: $SUB_PROJECT"
echo "==============================="

cd $TARGET_PATH/

# Check if dependency directory exists
if [ ! -d "target/dependency" ]; then
    echo "Dependency directory not found. Running mvn dependency:copy-dependencies..."
    mvn dependency:copy-dependencies
else
    echo "Dependency directory found: target/dependency"
fi

echo "Contents of dependency directory:"
ls -la target/dependency/ 2>/dev/null || echo "target/dependency/ not found"

rm -rf "$EXTRACTED_DEPENDENCIES_PATH" \
  && mkdir "$EXTRACTED_DEPENDENCIES_PATH" \
    && cd "$EXTRACTED_DEPENDENCIES_PATH" \
&& echo "Extract all dependencies from the 'jar' files from $DEPENDENCY_PATH ..." \
    && find "$DEPENDENCY_PATH" -type f -name "*.jar" -exec jar -xf {} \;

echo "Delete *.RSA *.DSA *.SF signature files..." \
  && find . -type f \( -name "*.RSA" -o -name "*.DSA" -o -name "*.SF" \) -delete

echo "Merge all dependencies into a single 'jar' file..." \
  && jar -cf "$TARGET_PATH"/all-dependencies.jar . \
    && echo "JAR File with all dependencies successfully created: $TARGET_PATH/all-dependencies.jar"